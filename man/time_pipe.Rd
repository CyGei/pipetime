% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_pipe.R
\name{time_pipe}
\alias{time_pipe}
\title{Measure execution time in a pipeline}
\usage{
time_pipe(
  .data,
  label = NULL,
  log_file = getOption("pipetime.log_file", NULL),
  console = getOption("pipetime.console", TRUE),
  time_unit = getOption("pipetime.time_unit", "secs")
)
}
\arguments{
\item{.data}{The input object to pass through the pipeline.}

\item{label}{Optional. Name for the operation. Defaults to the expression if not provided.}

\item{log_file}{Optional. File to write timing logs. Defaults to NULL (no logging).}

\item{console}{Logical. Print messages to the console? Defaults to TRUE.}

\item{time_unit}{Character. Unit of time. Must be one of "secs", "mins", "hours", "days", or "weeks".
Passed directly to \code{\link[base:difftime]{base::difftime()}}. Defaults to "secs".}
}
\value{
The input object, unchanged. Timing messages are printed or logged separately.
}
\description{
Record the runtime of a pipeline (|>) operation. Can print to the console
or log to a file. Arguments can also be set globally via options().
}
\examples{
library(dplyr)
data.frame(x = 1:3) |>
mutate(y = {Sys.sleep(0.5); x*2 }) |>
time_pipe("calc 1") |>
mutate(z = {Sys.sleep(0.5); x/2 }) |>
time_pipe("total pipeline")

}
