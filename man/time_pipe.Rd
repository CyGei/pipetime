% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/time_pipe.R
\name{time_pipe}
\alias{time_pipe}
\title{Measure execution time in a pipeline}
\usage{
time_pipe(
  .data,
  label = NULL,
  log_file = NULL,
  console = TRUE,
  time_unit = c("secs", "millisecs", "mins", "hours")
)
}
\arguments{
\item{.data}{The input object to pass through the pipeline.}

\item{label}{Optional. Name for the operation. Defaults to the expression if not provided.}

\item{log_file}{Optional. File to write timing logs.
A global default can be set with \code{options(pipetime.log_file = "filename.log")}.}

\item{console}{Logical. Print messages to the console? Default \code{TRUE}.}

\item{time_unit}{Character. Unit of time: \code{"secs"}, \code{"millisecs"}, \code{"mins"}, or \code{"hours"}. Default to \code{"secs"}.}
}
\value{
The input object, unchanged. Timing messages are printed or logged separately.
}
\description{
Record how long a step in a pipeline (\verb{|>}) takes.
Can print to the console or log to a file.
}
\examples{
library(dplyr)
data.frame(x = 1:3) |>
mutate(y = {Sys.sleep(0.5); x*2 }) |>
time_pipe("calc 1") |>
mutate(z = {Sys.sleep(0.5); x/2 }) |>
time_pipe("total pipeline")

}
